{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QualityMetrics=_ref=>{let{metrics}=_ref;const getScoreColor=score=>{if(score>=0.7)return'text-green-600 bg-green-50';if(score>=0.5)return'text-yellow-600 bg-yellow-50';return'text-red-600 bg-red-50';};const getProgressBarColor=score=>{if(score>=0.7)return'bg-green-500';if(score>=0.5)return'bg-yellow-500';return'bg-red-500';};const getSentimentDisplay=()=>{const{score,comparative}=metrics.sentiment;if(comparative>0.1)return{text:'Positive',color:'text-green-600'};if(comparative<-0.1)return{text:'Negative',color:'text-red-600'};return{text:'Neutral',color:'text-grey-600'};};const sentiment=getSentimentDisplay();return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg border border-grey-200\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold text-grey-800 mb-3\",children:\"Quality Analysis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 rounded-lg bg-grey-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-grey-700\",children:\"Overall Confidence\"}),/*#__PURE__*/_jsxs(\"span\",{className:`text-sm font-bold px-2 py-1 rounded ${getScoreColor(metrics.confidence)}`,children:[(metrics.confidence*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-grey-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:`h-2 rounded-full transition-all duration-300 ${getProgressBarColor(metrics.confidence)}`,style:{width:`${metrics.confidence*100}%`}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-3 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-grey-800\",children:[(metrics.coverage*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-600\",children:\"Coverage\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-500 mt-1\",children:\"Content representation\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-grey-800\",children:[(metrics.coherence*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-600\",children:\"Coherence\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-500 mt-1\",children:\"Sentence flow\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-bold text-grey-800\",children:[(metrics.diversity*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-600\",children:\"Diversity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-500 mt-1\",children:\"Vocabulary richness\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:`text-lg font-bold ${sentiment.color}`,children:sentiment.text}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-grey-600\",children:\"Sentiment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-grey-500 mt-1\",children:[\"(\",metrics.sentiment.comparative.toFixed(2),\")\"]})]})]}),(metrics.sentiment.positive.length>0||metrics.sentiment.negative.length>0)&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-grey-100 pt-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-3 text-xs\",children:[metrics.sentiment.positive.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-600\",children:\"Positive:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:[metrics.sentiment.positive.slice(0,3).map((word,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-100 text-green-700 px-1 py-0.5 rounded\",children:word},index)),metrics.sentiment.positive.length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-600\",children:[\"+\",metrics.sentiment.positive.length-3]})]})]}),metrics.sentiment.negative.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-red-600\",children:\"Negative:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:[metrics.sentiment.negative.slice(0,3).map((word,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"bg-red-100 text-red-700 px-1 py-0.5 rounded\",children:word},index)),metrics.sentiment.negative.length>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-600\",children:[\"+\",metrics.sentiment.negative.length-3]})]})]})]})})]});};export default QualityMetrics;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","QualityMetrics","_ref","metrics","getScoreColor","score","getProgressBarColor","getSentimentDisplay","comparative","sentiment","text","color","className","children","confidence","toFixed","style","width","coverage","coherence","diversity","positive","length","negative","slice","map","word","index"],"sources":["/Users/averyreyna/Codebases/rerank/src/components/QualityMetrics.tsx"],"sourcesContent":["import React from 'react';\nimport { QualityMetrics as QualityMetricsType } from '../utils/textSummarization';\n\ninterface QualityMetricsProps {\n  metrics: QualityMetricsType;\n}\n\nconst QualityMetrics: React.FC<QualityMetricsProps> = ({ metrics }) => {\n  const getScoreColor = (score: number) => {\n    if (score >= 0.7) return 'text-green-600 bg-green-50';\n    if (score >= 0.5) return 'text-yellow-600 bg-yellow-50';\n    return 'text-red-600 bg-red-50';\n  };\n\n  const getProgressBarColor = (score: number) => {\n    if (score >= 0.7) return 'bg-green-500';\n    if (score >= 0.5) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  const getSentimentDisplay = () => {\n    const { score, comparative } = metrics.sentiment;\n    if (comparative > 0.1) return { text: 'Positive', color: 'text-green-600' };\n    if (comparative < -0.1) return { text: 'Negative', color: 'text-red-600' };\n    return { text: 'Neutral', color: 'text-grey-600' };\n  };\n\n  const sentiment = getSentimentDisplay();\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg border border-grey-200\">\n      <h4 className=\"text-sm font-semibold text-grey-800 mb-3\">Quality Analysis</h4>\n      \n      {/* Overall Confidence Score */}\n      <div className=\"mb-4 p-3 rounded-lg bg-grey-50\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm font-medium text-grey-700\">Overall Confidence</span>\n          <span className={`text-sm font-bold px-2 py-1 rounded ${getScoreColor(metrics.confidence)}`}>\n            {(metrics.confidence * 100).toFixed(0)}%\n          </span>\n        </div>\n        <div className=\"w-full bg-grey-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all duration-300 ${getProgressBarColor(metrics.confidence)}`}\n            style={{ width: `${metrics.confidence * 100}%` }}\n          ></div>\n        </div>\n      </div>\n\n      {/* Detailed Metrics */}\n      <div className=\"grid grid-cols-2 gap-3 mb-4\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-grey-800\">{(metrics.coverage * 100).toFixed(0)}%</div>\n          <div className=\"text-xs text-grey-600\">Coverage</div>\n          <div className=\"text-xs text-grey-500 mt-1\">Content representation</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-grey-800\">{(metrics.coherence * 100).toFixed(0)}%</div>\n          <div className=\"text-xs text-grey-600\">Coherence</div>\n          <div className=\"text-xs text-grey-500 mt-1\">Sentence flow</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-lg font-bold text-grey-800\">{(metrics.diversity * 100).toFixed(0)}%</div>\n          <div className=\"text-xs text-grey-600\">Diversity</div>\n          <div className=\"text-xs text-grey-500 mt-1\">Vocabulary richness</div>\n        </div>\n        <div className=\"text-center\">\n          <div className={`text-lg font-bold ${sentiment.color}`}>{sentiment.text}</div>\n          <div className=\"text-xs text-grey-600\">Sentiment</div>\n          <div className=\"text-xs text-grey-500 mt-1\">({metrics.sentiment.comparative.toFixed(2)})</div>\n        </div>\n      </div>\n\n      {/* Sentiment Details */}\n      {(metrics.sentiment.positive.length > 0 || metrics.sentiment.negative.length > 0) && (\n        <div className=\"border-t border-grey-100 pt-3\">\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\n            {metrics.sentiment.positive.length > 0 && (\n              <div>\n                <span className=\"font-medium text-green-600\">Positive:</span>\n                <div className=\"flex flex-wrap gap-1 mt-1\">\n                  {metrics.sentiment.positive.slice(0, 3).map((word, index) => (\n                    <span key={index} className=\"bg-green-100 text-green-700 px-1 py-0.5 rounded\">\n                      {word}\n                    </span>\n                  ))}\n                  {metrics.sentiment.positive.length > 3 && (\n                    <span className=\"text-green-600\">+{metrics.sentiment.positive.length - 3}</span>\n                  )}\n                </div>\n              </div>\n            )}\n            {metrics.sentiment.negative.length > 0 && (\n              <div>\n                <span className=\"font-medium text-red-600\">Negative:</span>\n                <div className=\"flex flex-wrap gap-1 mt-1\">\n                  {metrics.sentiment.negative.slice(0, 3).map((word, index) => (\n                    <span key={index} className=\"bg-red-100 text-red-700 px-1 py-0.5 rounded\">\n                      {word}\n                    </span>\n                  ))}\n                  {metrics.sentiment.negative.length > 3 && (\n                    <span className=\"text-red-600\">+{metrics.sentiment.negative.length - 3}</span>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QualityMetrics;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAO1B,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAChE,KAAM,CAAAE,aAAa,CAAIC,KAAa,EAAK,CACvC,GAAIA,KAAK,EAAI,GAAG,CAAE,MAAO,4BAA4B,CACrD,GAAIA,KAAK,EAAI,GAAG,CAAE,MAAO,8BAA8B,CACvD,MAAO,wBAAwB,CACjC,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAID,KAAa,EAAK,CAC7C,GAAIA,KAAK,EAAI,GAAG,CAAE,MAAO,cAAc,CACvC,GAAIA,KAAK,EAAI,GAAG,CAAE,MAAO,eAAe,CACxC,MAAO,YAAY,CACrB,CAAC,CAED,KAAM,CAAAE,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAEF,KAAK,CAAEG,WAAY,CAAC,CAAGL,OAAO,CAACM,SAAS,CAChD,GAAID,WAAW,CAAG,GAAG,CAAE,MAAO,CAAEE,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,gBAAiB,CAAC,CAC3E,GAAIH,WAAW,CAAG,CAAC,GAAG,CAAE,MAAO,CAAEE,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,cAAe,CAAC,CAC1E,MAAO,CAAED,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,eAAgB,CAAC,CACpD,CAAC,CAED,KAAM,CAAAF,SAAS,CAAGF,mBAAmB,CAAC,CAAC,CAEvC,mBACEP,KAAA,QAAKY,SAAS,CAAC,gDAAgD,CAAAC,QAAA,eAC7Df,IAAA,OAAIc,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAG9Eb,KAAA,QAAKY,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7Cb,KAAA,QAAKY,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDf,IAAA,SAAMc,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAAC,oBAAkB,CAAM,CAAC,cAC7Eb,KAAA,SAAMY,SAAS,CAAE,uCAAuCR,aAAa,CAACD,OAAO,CAACW,UAAU,CAAC,EAAG,CAAAD,QAAA,EACzF,CAACV,OAAO,CAACW,UAAU,CAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,GACzC,EAAM,CAAC,EACJ,CAAC,cACNjB,IAAA,QAAKc,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cAClDf,IAAA,QACEc,SAAS,CAAE,gDAAgDN,mBAAmB,CAACH,OAAO,CAACW,UAAU,CAAC,EAAG,CACrGE,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGd,OAAO,CAACW,UAAU,CAAG,GAAG,GAAI,CAAE,CAC7C,CAAC,CACJ,CAAC,EACH,CAAC,cAGNd,KAAA,QAAKY,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1Cb,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1Bb,KAAA,QAAKY,SAAS,CAAC,iCAAiC,CAAAC,QAAA,EAAE,CAACV,OAAO,CAACe,QAAQ,CAAG,GAAG,EAAEH,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAK,CAAC,cAC7FjB,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,cACrDf,IAAA,QAAKc,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,wBAAsB,CAAK,CAAC,EACrE,CAAC,cACNb,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1Bb,KAAA,QAAKY,SAAS,CAAC,iCAAiC,CAAAC,QAAA,EAAE,CAACV,OAAO,CAACgB,SAAS,CAAG,GAAG,EAAEJ,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAK,CAAC,cAC9FjB,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACtDf,IAAA,QAAKc,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,eAAa,CAAK,CAAC,EAC5D,CAAC,cACNb,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1Bb,KAAA,QAAKY,SAAS,CAAC,iCAAiC,CAAAC,QAAA,EAAE,CAACV,OAAO,CAACiB,SAAS,CAAG,GAAG,EAAEL,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAK,CAAC,cAC9FjB,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACtDf,IAAA,QAAKc,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,qBAAmB,CAAK,CAAC,EAClE,CAAC,cACNb,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1Bf,IAAA,QAAKc,SAAS,CAAE,qBAAqBH,SAAS,CAACE,KAAK,EAAG,CAAAE,QAAA,CAAEJ,SAAS,CAACC,IAAI,CAAM,CAAC,cAC9EZ,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,WAAS,CAAK,CAAC,cACtDb,KAAA,QAAKY,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,GAAC,CAACV,OAAO,CAACM,SAAS,CAACD,WAAW,CAACO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAK,CAAC,EAC3F,CAAC,EACH,CAAC,CAGL,CAACZ,OAAO,CAACM,SAAS,CAACY,QAAQ,CAACC,MAAM,CAAG,CAAC,EAAInB,OAAO,CAACM,SAAS,CAACc,QAAQ,CAACD,MAAM,CAAG,CAAC,gBAC9ExB,IAAA,QAAKc,SAAS,CAAC,+BAA+B,CAAAC,QAAA,cAC5Cb,KAAA,QAAKY,SAAS,CAAC,gCAAgC,CAAAC,QAAA,EAC5CV,OAAO,CAACM,SAAS,CAACY,QAAQ,CAACC,MAAM,CAAG,CAAC,eACpCtB,KAAA,QAAAa,QAAA,eACEf,IAAA,SAAMc,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,cAC7Db,KAAA,QAAKY,SAAS,CAAC,2BAA2B,CAAAC,QAAA,EACvCV,OAAO,CAACM,SAAS,CAACY,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACtD7B,IAAA,SAAkBc,SAAS,CAAC,iDAAiD,CAAAC,QAAA,CAC1Ea,IAAI,EADIC,KAEL,CACP,CAAC,CACDxB,OAAO,CAACM,SAAS,CAACY,QAAQ,CAACC,MAAM,CAAG,CAAC,eACpCtB,KAAA,SAAMY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,GAAC,CAACV,OAAO,CAACM,SAAS,CAACY,QAAQ,CAACC,MAAM,CAAG,CAAC,EAAO,CAChF,EACE,CAAC,EACH,CACN,CACAnB,OAAO,CAACM,SAAS,CAACc,QAAQ,CAACD,MAAM,CAAG,CAAC,eACpCtB,KAAA,QAAAa,QAAA,eACEf,IAAA,SAAMc,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,cAC3Db,KAAA,QAAKY,SAAS,CAAC,2BAA2B,CAAAC,QAAA,EACvCV,OAAO,CAACM,SAAS,CAACc,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACtD7B,IAAA,SAAkBc,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CACtEa,IAAI,EADIC,KAEL,CACP,CAAC,CACDxB,OAAO,CAACM,SAAS,CAACc,QAAQ,CAACD,MAAM,CAAG,CAAC,eACpCtB,KAAA,SAAMY,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,GAAC,CAACV,OAAO,CAACM,SAAS,CAACc,QAAQ,CAACD,MAAM,CAAG,CAAC,EAAO,CAC9E,EACE,CAAC,EACH,CACN,EACE,CAAC,CACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}